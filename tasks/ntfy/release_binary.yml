---
- name: Check if tempdir exists
  ansible.builtin.find:
    paths: "{{ ntfy_dirs_tmp }}/"
    patterns: "*tempgit_ntfy*"
    file_type: directory
  register: _install_tempdir_state

- name: Create temporary directory if not exists
  when: _install_tempdir_state.matched == 0
  block:
    - name: Create temporary directorys root path
      become: true
      ansible.builtin.file:
        path: "{{ ntfy_dirs_tmp }}"
        state: directory
        owner: "{{ ntfy_system_user }}"
        group: "{{ ntfy_system_group }}"
        mode: "750"

    - name: Create target temporary directory
      become: true
      ansible.builtin.tempfile:
        state: directory
        path: "{{ ntfy_dirs_tmp }}/"
        suffix: tempgit_ntfy
      register: _install_tempdir_created

- name: Determine temporary directory to use  # noqa jinja[spacing]
  ansible.builtin.set_fact:
    _install_tempdir: >-
      {%- if _install_tempdir_created.path is defined -%}
      {{ _install_tempdir_created.path }}
      {%- else -%}
      {{ _install_tempdir_state.files[0].path }}
      {%- endif -%}

- name: Download and extract ntfy
  become: true
  ansible.builtin.unarchive:
    src: "{{ _release_download_url }}"
    remote_src: true
    dest: "{{ _install_tempdir }}"
    owner: "{{ ntfy_system_user }}"
    group: "{{ ntfy_system_group }}"
  register: _download_and_unarchive_ntfy
  until:
    - "not 'urlopen error' in _download_and_unarchive_ntfy.msg | default('')"
    - "not 'The read operation timed out' in _download_and_unarchive_ntfy.msg | default('')"
  retries: 3
  delay: 60

- name: Set all file & directory permissions in temporary directory
  become: true
  ansible.builtin.command:
    cmd: "{{ item }}"
  with_items:
    - find {{ _install_tempdir }} -type d -exec chmod -c 0750 {} ;
    - find {{ _install_tempdir }} -type f -exec chmod -c 0640 {} ;
  register: _set_temp_install_permissions
  changed_when:
    - 'not _set_temp_install_permissions.stdout == ""'

- name: Copy ntfy binary
  become: true
  ansible.builtin.copy:
    src: "{{ _install_tempdir }}/ntfy_{{ ntfy_version }}_linux_{{ release_binary_arch }}/ntfy"
    remote_src: true
    dest: "{{ ntfy_dirs_installation }}/ntfy"
    owner: "{{ ntfy_system_user }}"
    group: "{{ ntfy_system_group }}"
    mode: "0755"

- name: Remove temporary directory
  become: true
  ansible.builtin.file:
    path: "{{ _install_tempdir }}"
    state: absent
